/**
 * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 **/
        
/**
 * This file was automatically generated by the Mule Development Kit
 */
package com.redpill_linpro.mule.module.cb2java;

import java.io.InputStream;
import java.util.List;
import java.util.Map;

import net.sf.cb2java.data.Record;

import static org.hamcrest.CoreMatchers.*;
import static org.junit.Assert.*;
import org.junit.Test;
import org.mule.api.MuleEvent;
import org.mule.construct.Flow;
import org.mule.tck.junit4.FunctionalTestCase;
import org.mule.util.IOUtils;

public class Copybook2JavaExtensionModuleTest extends FunctionalTestCase
{
    @Override
    protected String getConfigResources()
    {
        return "mule-config.xml";
    }
    
//    @Test
//    public void rawCB2JavaApi() throws Exception {
//    	
//    }
    
    @Test
    public void sendCopybookData() throws Exception {
    	InputStream input = IOUtils.getResourceAsStream("b.input.txt",getClass());
    	Flow flow = (Flow)getFlowConstruct("testFlow");
        MuleEvent event = getTestEvent(input, flow);
        MuleEvent result = flow.process(event);
        assertThat(result.getMessage().getPayload(), instanceOf(List.class));
        List<Record> records = (List<Record>) result.getMessage().getPayload();
        Map<String,Object> record = records.get(0).toMap();
        List sub = (List) ((Map)record.get("ROOT")).get("SUB");
        assertEquals(2, sub.size());
        assertEquals("EEE", ((Map)sub.get(1)).get("E").toString());
        assertEquals("FFF", ((Map)sub.get(1)).get("F").toString());
    }

}
